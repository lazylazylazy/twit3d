<!DOCTYPE html>
	<head>
		<title>again</title>
	<style>canvas { width: 100%; height: 100%; color:  rgb(255,255,255); }</style>
	<!-- <link rel="stylesheet" type="text/css" href="/css/application.css"> -->
</head>
<body>


<script src='/jquery-2.0.3.js'></script>
<script src='/three.min.js'></script>
<script>

var camValue = 0

$(this).keydown(function(event) {
 var code = event.keyCode;
 if (code == 40) camValue = 
 	camValue-0.1;
 if (code == 38) camValue =
 	camValue+.1;
});

var scene = new THREE.Scene();

var camera = new THREE.PerspectiveCamera( 50, window.innerWidth / window.innerHeight, 0.1, 1000 );

var renderer = new THREE.CanvasRenderer();
    renderer.setClearColor(0xffffff);
    renderer.setSize(window.innerWidth, window.innerHeight);
document.body.appendChild( renderer.domElement );



var geometry = new THREE.CubeGeometry(1, 1, 1);
var material = new THREE.MeshBasicMaterial( { color: 0x000000 } );
var cube = new THREE.Mesh( geometry, material );


var geometry2 = new THREE.SphereGeometry(1.5);
var cube2 = new THREE.Mesh( geometry2, material );

var geometry3 = new THREE.CylinderGeometry(1, 1, 2);
var cube3 = new THREE.Mesh( geometry3, material );

wireframe: true;
wireframeLinewidth: 10;





// var shape = new THREE.SphereGeometry(250); 
// var cover = new THREE.MeshBasicMaterial( {color: 0x00ff00} );
// var ball = new THREE.Mesh(shape, cover); 

cube2.add(cube);
scene.add(cube2);
cube2.add(cube3);
cube.position.set(-3,0,0);
cube2.position.set(0,0,0)
cube3.position.set(3,0,0)
camera.position.z = 10;

function render() {
	
	requestAnimationFrame(render);
	cube.rotation.x += 0.015;
	cube.rotation.y += 0.015;
	cube.rotation.z += 0.015;
	cube2.rotation.x += 0.002;
	cube2.rotation.y += 0.002;
	cube2.rotation.z += 0.004;
	cube3.rotation.x += 0.002;
	cube3.rotation.y += 0.003;
	cube3.rotation.z += 0.005;
	camera.rotation.z = camValue
	renderer.render(scene, camera);
};



render()



</script>

</body>

